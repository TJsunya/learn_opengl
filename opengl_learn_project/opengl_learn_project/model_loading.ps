#version 330 core
out vec4 FragColor;

in VS_OUT{
vec2 TexCoords;
vec3 normal;
vec3 FragPos;
} ps_in;


uniform sampler2D texture_diffuse1;
uniform sampler2D texture_specular1;
uniform vec3 viewPos;
uniform vec3 lightPos;

void main()
{   
	vec3 lightDir = normalize(lightPos-ps_in.FragPos);
	vec3 normal = normalize(ps_in.normal);
	float diff = max(dot(ps_in.normal, lightDir), 0.0);
	vec3 diffuse = diff * texture(texture_diffuse1, ps_in.TexCoords).xyz;

	vec3 reflectDir = reflect(-lightDir, ps_in.normal);
	vec3 viewDir = normalize(viewPos - ps_in.FragPos);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
	vec3 specular = spec*texture(texture_specular1, ps_in.TexCoords).xyz;

    FragColor = vec4(specular + diffuse , 1.0);
}